
import java.util.Scanner;

/**
 * GameOfLife
 * Demonstrates the game of life multiplying and and dying
 * @author ethanzhou
 *April 24 2017
 */
public class Life {
	static Scanner br = new Scanner(System.in);
	static int[][] field = new int[10][10];
	static int i;
	static int n;
	
	public static void main(String[] args){
		do{
		if (n == 0){	
			for(i = 0; i < 10; i++){
				for(n = 0; n < 10; n++){
					System.out.print(field[i][n] = 0);	
				}
				System.out.println();
			}
		}else{
			start();
			board();
		}
		}while(true);
		
	}
	
	/**
	 * This method gets input from user for which index they want to input a 1 into
	 */
	public static void start(){// making a method void prevents you from needing to return, so you could just call it when you need it to do something
		System.out.println("please input coordiantes from 0 - 10");
		field[br.nextInt()][br.nextInt()] = 1;
	}
	
	/**
	 * This method creates the 2-D array that is able to access and keeps going through each index of the array when called.
	 * It calls the rules to update the new 2-D array and then prints it
	 */
	public static void board(){
		for(i = 0; i < 10; i++){
			for(n = 0; n < 10; n++){
				cellCheck(field[i][n]);
				System.out.print(field[i][n]);
					
			}
			System.out.println();
		}
	}
	
	/**
	 * this method is the rules for the game of life
	 * @param cell is the index for the 2-D array that is meant for the board
	 * @return returns the new 2-D array that has went threw the rules
	 */
	public static int cellCheck(int cell){
			//field[(int)Math.random() + 11][(int)Math.random() + 11] = 1; 
		if (field[i][n] == 1 && field[i][n +1] == 1 && field[i][n-1] ==0 && field[i+1][n] ==0 && field[i-1][n] ==0 || field[i][n] == 1 && field[i][n - 1] == 1 && field[i][n+1] ==0 && field[i+1][n] ==0 && field[i-1][n] ==0 || field[i][n] == 1 && field[i + 1][n] == 1 && field[i][n-1] ==0 && field[i][n+1] ==0 && field[i-1][n] ==0  || field[i][n] == 1 && field[i - 1][n] == 1 && field[i][n-1] ==0 && field[i+1][n] ==0 && field[i][n+1] ==0 ){
			field[i][n] = 0;
		}else if (field[i][n] == 1 && field[i][n+1] == 1 & field[i][n - 1] ==1 && field[i + 1][n] ==1 && field[i - 1][n] == 1){
			field[i][n] = 0;
		}else if(field[i][n] == 1 && field[i+1 | i-1][n+1 | n-1] == 1){
			field[i][n] = 1;
		}
		//There is a problem with the random, need to fix later
	
		return field[i][n];
	}
	
}
